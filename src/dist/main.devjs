"use strict";

var _rest = require("@discordjs/rest");

var _v = require("discord-api-types/v9");

var _discord = require("discord.js");

var rest = new _rest.REST({
  version: '9'
}).setToken('OTM3MzkyNjk2MTc0MTg2NDk3.YfbE-g.sMLF9qrBiQflDS8XSmxyuBLisic');

(function _callee() {
  return regeneratorRuntime.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;
          console.log('Started refreshing application (/) commands.');
          _context.next = 4;
          return regeneratorRuntime.awrap(rest.put(_v.Routes.applicationGuildCommands(CLIENT_ID, GUILD_ID), {
            body: commands
          }));

        case 4:
          console.log('Successfully reloaded application (/) commands.');
          _context.next = 10;
          break;

        case 7:
          _context.prev = 7;
          _context.t0 = _context["catch"](0);
          console.error(_context.t0);

        case 10:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, [[0, 7]]);
})();

client.on('ready', function () {
  console.log("Logged in as ".concat(client.user.tag, "!"));
});
client.on('interactionCreate', function _callee2(interaction) {
  return regeneratorRuntime.async(function _callee2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          if (interaction.isCommand()) {
            _context2.next = 2;
            break;
          }

          return _context2.abrupt("return");

        case 2:
          if (!(interaction.commandName === 'ping')) {
            _context2.next = 5;
            break;
          }

          _context2.next = 5;
          return regeneratorRuntime.awrap(interaction.reply('Pong!'));

        case 5:
        case "end":
          return _context2.stop();
      }
    }
  });
}); //----------------------------------------------

var client = new _discord.Client({
  intents: [_discord.Intents.FLAGS.GUILDS]
});
client.on('ready', function () {
  console.log("Logged in as ".concat(client.user.tag, "!"));
});
client.on('interactionCreate', function _callee3(interaction) {
  return regeneratorRuntime.async(function _callee3$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          if (interaction.isCommand()) {
            _context3.next = 2;
            break;
          }

          return _context3.abrupt("return");

        case 2:
          if (!(interaction.commandName === 'ping')) {
            _context3.next = 5;
            break;
          }

          _context3.next = 5;
          return regeneratorRuntime.awrap(interaction.reply('Pong!'));

        case 5:
        case "end":
          return _context3.stop();
      }
    }
  });
});
client.login('OTM3MzkyNjk2MTc0MTg2NDk3.YfbE-g.sMLF9qrBiQflDS8XSmxyuBLisic');